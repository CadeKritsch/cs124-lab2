[{"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/index.jsx":"1","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/App.jsx":"2","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/Menu.jsx":"3","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/TodoList.jsx":"4","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/TodoItem.jsx":"5","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/firebase.jsx":"6"},{"size":146,"mtime":1649633478714,"results":"7","hashOfConfig":"8"},{"size":5800,"mtime":1649644557117,"results":"9","hashOfConfig":"8"},{"size":1248,"mtime":1649633987585,"results":"10","hashOfConfig":"8"},{"size":2588,"mtime":1649643705256,"results":"11","hashOfConfig":"8"},{"size":1870,"mtime":1649644482679,"results":"12","hashOfConfig":"8"},{"size":497,"mtime":1649633987587,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1bnte2e",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"17"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/index.jsx",[],[],["34","35"],"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/App.jsx",[],[],"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/Menu.jsx",[],[],"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/TodoList.jsx",[],[],"/Users/cadekritsch/WebstormProjects/cs124-lab2/src/TodoItem.jsx",["36","37"],[],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./todo-item.css\";\n\nconst TodoItem = (props) => {\n  const [updatedName, setUpdatedName] = useState(\"\");\n  const [isRenameClicked, setIsRenameClicked] = useState(false);\n  const [toggleCompleted, setToggleCompleted] = useState(props.isCompleted);\n  const handleSetToggleCompleted =() => {\n    setToggleCompleted((prevState) => !prevState);\n  }\n  return (\n    <>\n      <div className=\"item-container\">\n        <div tabindex=\"0\" onKeyPress={handleSetToggleCompleted}\n             role={\"ListItem\"}\n          className={`item ${\n            props.isCompleted === true ? \"completed-item\" : null\n          }`}\n          onClick={() => {\n            props.onItemChange(\n              props.id,\n              \"isCompleted\",\n              !props.isCompleted\n            );\n          }}\n        >\n          {props.name}\n        </div>\n        {isRenameClicked ? (\n          <>\n            <input tabindex=\"0\"\n              type=\"text\"\n              name=\"updated-name\"\n              id=\"updated-name\"\n              value={updatedName}\n              onChange={(e) => {\n                setUpdatedName(e.target.value);\n              }}\n            />\n            <button\n              onClick={() => {\n                props.onItemChange(props.id, \"itemName\", updatedName);\n                setIsRenameClicked(false);\n              }}\n            >\n              Rename\n            </button>\n          </>\n        ) : (\n          <button\n            onClick={() => {\n              setIsRenameClicked((prevState) => !prevState);\n            }}\n          >\n            Rename\n          </button>\n        )}\n      </div>\n    </>\n  );\n};\n\nTodoItem.propTypes = {\n  name: PropTypes.string,\n  isCompleted: PropTypes.bool,\n  id: PropTypes.string,\n  onItemChange: PropTypes.func,\n};\n\nexport default TodoItem;\n","/Users/cadekritsch/WebstormProjects/cs124-lab2/src/firebase.jsx",[],[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":9,"column":10,"nodeType":"44","messageId":"45","endLine":9,"endColumn":25},{"ruleId":"46","severity":1,"message":"47","line":17,"column":14,"nodeType":"48","endLine":17,"endColumn":31},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'toggleCompleted' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/aria-role","Elements with ARIA roles must use a valid, non-abstract ARIA role.","JSXAttribute","no-global-assign","no-unsafe-negation"]